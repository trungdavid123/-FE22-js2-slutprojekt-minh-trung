{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAkCA,MAAMC,GAAK,EAAAC,EAAAC,gBACLC,GAAO,EAAAL,EAAAM,WACPC,GAAS,EAAAJ,EAAAK,YAAWN,EAAI,SACxBO,EAAQC,SAASC,eAAe,SAChCC,EAASF,SAASG,cAAc,WAChCC,EAAWJ,SAASG,cAAc,cAClCE,EAAaL,SAASG,cAAc,aACpCG,EAAOC,aAAaC,QAAQ,QAC5BC,EAAcT,SAASG,cAAc,iBACrCO,EAAaJ,EAAOK,KAAKC,MAAMN,GAAQ,KACvCO,EAAcb,SAASG,cAAc,iBACrCW,EAAYd,SAASG,cAAc,oBACnCY,EAAoBf,SAASG,cAAc,gBAEjD,IAAIa,EAAS,GACb,MAAMC,GAAW,EAAAxB,EAAAK,YAAWN,EAAI,SAE3Bc,IAAMY,OAAOC,SAASC,KAAO,KAE9Bd,IACAF,EAASiB,UAAYX,EAAWY,MAAQZ,EAAWa,aAAeb,EAAWc,MAAMC,MAAM,KAAK,GAC9FvB,EAAOwB,IAAMhB,EAAWiB,SAAWjB,EAAWiB,SAAW,kDAIzD5B,GACAA,EAAM6B,iBAAiB,iBAAiB,KAClB5B,SAASG,cAAc,oBAC/ByB,iBAAiB,SAAS,MAQ5C,WACI,MAAMC,EAAa7B,SAASC,eAAe,eACrC6B,EAAM9B,SAASC,eAAe,gBAC9B8B,EAAW/B,SAASG,cAAc,cACxC,IAAI6B,EAAQzB,aAAaC,QAAQ,YAE7ByB,EADWtB,KAAKC,MAAMoB,GAAS,MACbE,QAAQC,GAAmBA,EAAKX,QAAUd,EAAWc,QAEvEK,EAAWO,OAASN,EAAIM,SACxB,EAAA3C,EAAA4C,QAAOxC,EAAQ,CACXyC,MAAOT,EAAWO,MAClBN,IAAKA,EAAIM,MACTG,UAAWN,EAAOO,OAAS,EAAIP,EAAO,GAAGQ,GAAK,KAC9CnB,KAAMZ,EAAWa,aAAeb,EAAWc,MAAMC,MAAM,KAAK,GAC5DiB,KAAM,EACNC,QAAS,GACThB,SAAUjB,EAAWiB,UAAY,iDACjCiB,WAAW,IAAIC,MAAOC,gBAE1Bf,EAASgB,SAEblB,EAAWO,MAAQ,GACnBN,EAAIM,MAAQ,EAChB,CA9BYY,EAAA,GACJ,KA+BR,EAAAvD,EAAAwD,YAAWpD,GAASqD,IAEhB,IAAIC,EAAgB,GAEpBD,EAASE,KAAKC,SAASC,IACnBH,EAAMI,KAAK,IACJD,EAAIE,OAAgBf,GAAIa,EAAIb,IACnC,IAGJgB,EAAUN,GAEOnD,SAAS0D,iBAAiB,aAElCL,SAAQ,CAACM,EAASC,KACvBD,EAAQ/B,iBAAiB,SAAUiC,IAC/B,MAAMpB,EAAKU,EAAMS,GAAKnB,GACtB,IAAIqB,EAAeX,EAAMS,GAAKlB,KAC1BqB,EAAYZ,EAAMS,GAAKjB,QAC3B,MAAMqB,EAAYD,GAAWE,MAAMC,GAAYA,EAAQC,MAAQzD,EAAWyD,MAC1EnD,EAASyB,EACT,MAAM2B,GAAU,EAAA3E,EAAA6D,KAAI9D,EAAI,QAASiD,GAEjC,GAAIuB,EAAW,CACX,IAAIK,EAAeN,EAAsB7B,QAAQgC,GAAYA,EAAQC,MAAQzD,EAAWyD,OACxF,EAAA1E,EAAA6E,WAAUF,EAAS,CACf1B,KAAMoB,EAAe,EACrBnB,QAAS0B,GAGjB,MACIE,QAAQC,IAAI,eACZ,EAAA/E,EAAA6E,WAAUF,EAAS,CACf1B,KAAMoB,EAAe,EACrBnB,QAAS,IAAIoB,EAAqBrD,IAE1C,GACJ,GACJ,IAIJ,MAAM+C,EAAaN,IACfrC,EAAUO,UAAY,GAEC8B,EAAMsB,MAAK,CAACC,EAAGC,KAClC,MAAMC,EAAQF,EAAE9B,UAAY,IAAIC,KAAK6B,EAAE9B,WAAa,IAAIC,KAAK,GAE7D,OADc8B,EAAE/B,UAAY,IAAIC,KAAK8B,EAAE/B,WAAa,IAAIC,KAAK,IAChDgC,UAAYD,EAAMC,SAAO,IAGjCC,KAAKC,IACV,MAAMC,EAAU,6FAA6FD,EAAKxC,8IAEvGwC,EAAKpD,SAAWoD,EAAKpD,SAAW,+FACpBoD,EAAKzD,MAAQyD,EAAKxD,iEAEhBwD,EAAKzC,4CACPyC,EAAKjD,oHAEWiD,EAAKpC,SAASsB,MAAMC,GAAYA,EAAQC,MAAQzD,EAAWyD,MAAO,QAAU,YAAYY,EAAKrC,iDAIpI5B,EAAUO,WAAa2D,CAAA,GAC3B,EA8DJjE,EAAkBa,iBAAiB,SAAUiC,IACzC,IAAI7B,EAAQzB,aAAaC,QAAQ,YAE7ByB,EADWtB,KAAKC,MAAMoB,GAAS,MACbE,QAAQC,GAAqBA,EAAKX,QAAUd,EAAWc,QAE7EN,OAAOC,SAASC,KAAO,8BAA8Ba,EAAO,GAAGQ,IAAI,IAGvEpC,EAAWuB,iBAAiB,SAAS,MACjC,EAAAtC,EAAA2F,SAAQtF,GAAMuF,MAAK,KACf3E,aAAa4E,WAAW,QACxBjE,OAAOC,SAASC,KAAO,sBACxBgE,OAAOC,IACNd,QAAQC,IAAIa,EAAMC,QAAO,GAC7B,KAxEA,EAAA7F,EAAAwD,YAAWhC,GAAWiC,IAClB,IAAIlB,EAAgB,GACpBkB,EAASE,KAAKC,SAASC,IACnBtB,EAAMuB,KAAK,IACJD,EAAIE,OAAgBf,GAAIa,EAAIb,IACnC,IAGJT,EAAM8C,KAAK3C,IACP,GAAIA,EAAKoD,YAAa,CAClB,IAAIC,EAAK,mHAEqCrD,EAAKM,yKAE7BN,EAAKR,0EACQQ,EAAKZ,aAAaE,MAAM,KAAKgE,MAAM,EAAG,GAAGC,KAAK,0JAKjFjF,EAAaY,WAAamE,CAC9B,IACJ,KAKJ,EAAA/F,EAAAwD,YAAWhC,GAAWiC,IAClB,IAAIlB,EAAgB,GAEpBkB,EAASE,KAAKC,SAASC,IACnB,IAAIE,EAAOF,EAAIE,OAEfxB,EAAMuB,KAAK,IACJC,EAAMf,GAAIa,EAAIb,IACrB,IAGJlC,aAAaoF,QAAQ,WAAYhF,KAAKiF,UAAU5D,IAEhDuC,QAAQC,IAAIxC,GAEZA,EAAM8C,KAAK3C,IACP,IAAIqD,EAAK,mHAEyCrD,EAAKM,yKAE7BN,EAAKR,UAAY,kHACJQ,EAAKZ,aAAaE,MAAM,KAAKgE,MAAM,EAAG,GAAGC,KAAK,MAAQvD,EAAKX,MAAMC,MAAM,KAAK,iFAInHZ,EAAaQ,WAAamE,CAAA,GAC9B","sources":["src/pages/home/app.ts"],"sourcesContent":["import { getAuth, signOut, User as UserAuth } from 'firebase/auth';\r\nimport { getFirestore, collection, addDoc, onSnapshot, updateDoc, doc } from 'firebase/firestore';\r\n\r\nexport interface Post {\r\n    displayName: string | undefined;\r\n    photoURL: string;\r\n    title: string;\r\n    id: string,\r\n    createdBy: string,\r\n    msg: string,\r\n    name: string,\r\n    love: number,\r\n    isLoved: UserAuth[] | User[] | [],\r\n    createdAt: string\r\n}\r\n\r\nexport interface User {\r\n    email: string,\r\n    id: string,\r\n    isSuggested: boolean,\r\n    name: string\r\n    photoURL: string | null,\r\n    displayName?: string,\r\n    uid?: string,\r\n}\r\n\r\nexport interface ParcedUser {\r\n    displayName: string;\r\n    email: string;\r\n    id: string;\r\n    isSuggested: boolean;\r\n    photoURL: string\r\n}\r\n\r\nconst db = getFirestore();\r\nconst auth = getAuth();\r\nconst colRef = collection(db, 'posts');\r\nconst modal = document.getElementById('modal');\r\nconst avatar = document.querySelector('.avatar') as HTMLImageElement;\r\nconst userName = document.querySelector('.user-name') as HTMLElement;\r\nconst signOutBtn = document.querySelector('.sign-out') as HTMLButtonElement;\r\nconst user = localStorage.getItem('user');\r\nconst accountList = document.querySelector('.account-list');\r\nconst parsedUser = user ? JSON.parse(user) : null;\r\nconst allAccounts = document.querySelector('.all-accounts');\r\nconst container = document.querySelector('.posts-container') as HTMLElement;\r\nconst userInfoContainer = document.querySelector('.user-navbar') as HTMLElement;\r\n\r\nlet postId = \"\";\r\nconst usersRef = collection(db, 'users');\r\n\r\nif (!user) window.location.href = '/';\r\n\r\nif (user) {\r\n    userName.innerHTML = parsedUser.name || parsedUser.displayName || parsedUser.email.split(\"@\")[0];\r\n    avatar.src = parsedUser.photoURL ? parsedUser.photoURL : \"https://www.w3schools.com/howto/img_avatar.png\";\r\n}\r\n\r\n// Show or hide modal\r\nif (modal) {\r\n    modal.addEventListener('show.bs.modal', () => {\r\n        const submitBtn = document.querySelector('.btn-create-post') as HTMLButtonElement;\r\n        submitBtn.addEventListener('click', () => {\r\n            addItem();\r\n        });\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction addItem() {\r\n    const titleModal = document.getElementById('title-modal') as HTMLInputElement;\r\n    const msg = document.getElementById('message-text') as HTMLInputElement;\r\n    const closeBtn = document.querySelector('.btn-close') as HTMLElement;\r\n    let users = localStorage.getItem('userList');\r\n    let userList = JSON.parse(users ?? '[]');\r\n    let isMyId = userList.filter((user: UserAuth) => user.email === parsedUser.email);\r\n\r\n    if (titleModal.value && msg.value) {\r\n        addDoc(colRef, {\r\n            title: titleModal.value,\r\n            msg: msg.value,\r\n            createdBy: isMyId.length > 0 ? isMyId[0].id : null,\r\n            name: parsedUser.displayName || parsedUser.email.split(\"@\")[0],\r\n            love: 0,\r\n            isLoved: [],\r\n            photoURL: parsedUser.photoURL || \"https://www.w3schools.com/howto/img_avatar.png\",\r\n            createdAt: new Date().toISOString()\r\n        })\r\n        closeBtn.click();\r\n    }\r\n    titleModal.value = '';\r\n    msg.value = '';\r\n}\r\n\r\nonSnapshot(colRef, (snapshot) => {\r\n\r\n    let posts: Post[] = [];\r\n\r\n    snapshot.docs.forEach((doc) => {\r\n        posts.push({\r\n            ...doc.data() as Post, id: doc.id\r\n        });\r\n    })\r\n\r\n    showPosts(posts)\r\n\r\n    const loveBtns = document.querySelectorAll('.love-btn');\r\n\r\n    loveBtns.forEach((loveBtn, idx) => {\r\n        loveBtn.addEventListener('click', (e: Event) => {\r\n            const id = posts[idx].id;\r\n            let loveQuantity = posts[idx].love;\r\n            let isLovedBy = posts[idx].isLoved;\r\n            const isMatched = isLovedBy?.some((lovedBy) => lovedBy.uid === parsedUser.uid)\r\n            postId = id;\r\n            const postRef = doc(db, \"posts\", id);\r\n\r\n            if (isMatched) {\r\n                let newIsLovedBy = (isLovedBy as User[]).filter((lovedBy) => lovedBy.uid !== parsedUser.uid)\r\n                updateDoc(postRef, {\r\n                    love: loveQuantity - 1,\r\n                    isLoved: newIsLovedBy\r\n                })\r\n\r\n            } else {\r\n                console.log('No matched')\r\n                updateDoc(postRef, {\r\n                    love: loveQuantity + 1,\r\n                    isLoved: [...isLovedBy as User[], parsedUser]\r\n                })\r\n            }\r\n        })\r\n    })\r\n})\r\n\r\n\r\nconst showPosts = (posts: Post[]) => {\r\n    container.innerHTML = \"\";\r\n\r\n    let newPosts: Post[] = posts.sort((a, b) => {\r\n        const aDate = a.createdAt ? new Date(a.createdAt) : new Date(0);\r\n        const bDate = b.createdAt ? new Date(b.createdAt) : new Date(0);\r\n        return bDate.getTime() - aDate.getTime();\r\n    });\r\n\r\n    newPosts.map((post) => {\r\n        const element = ` <div class=\"card w-100 mb-3\"> <div class=\"card-body\"><a href=\"../profile/profile.html?id=${post.createdBy}\" class=\"d-flex align-items-center gap-2 mb-3\">\r\n        <img class=\"avatar\" style=\"width: 30px; height: 30px;\"\r\n            src=\"${post.photoURL ? post.photoURL : \"https://www.w3schools.com/howto/img_avatar.png\"}\" alt=\"user\">\r\n        <p class=\"user-name\">${post.name || post.displayName}</p>\r\n        </a>\r\n        <h5 class=\"card-title\">${post.title}</h5>\r\n        <p class=\"card-text\">${post.msg}</p>\r\n            <div class=\"d-flex align-items-center gap-2\">\r\n               <i class=\"love-btn bi bi-heart${post.isLoved?.some((lovedBy) => lovedBy.uid === parsedUser.uid) ? \"-fill\" : ''}\"></i> ${post.love}\r\n            </div>\r\n        </div></div>`;\r\n\r\n        container.innerHTML += element;\r\n    })\r\n}\r\n\r\nfunction showSuggestedAccounts() {\r\n    onSnapshot(usersRef, (snapshot) => {\r\n        let users: User[] = [];\r\n        snapshot.docs.forEach((doc) => {\r\n            users.push({\r\n                ...doc.data() as User, id: doc.id\r\n            });\r\n        })\r\n\r\n        users.map((user: User) => {\r\n            if (user.isSuggested) {\r\n                let el = `\r\n                    <li class=\"list-group-item\">\r\n                        <a href=\"../profile/profile.html?id=${user.id}\" class=\"d-flex align-items-center gap-2\">\r\n                            <img class=\"avatar\" style=\"width: 30px; height: 30px;\"\r\n                                src=${user.photoURL} alt=\"user\">\r\n                            <p class=\"user-name\">${user.displayName?.split(' ').slice(0, 2).join(' ')}</p>\r\n                            <i class=\"bi bi-flag-fill icon-flag\"></i>\r\n                        </a>\r\n                </li>\r\n                 `;\r\n                accountList!.innerHTML += el;\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nfunction showAllAccounts() {\r\n    onSnapshot(usersRef, (snapshot) => {\r\n        let users: User[] = [];\r\n\r\n        snapshot.docs.forEach((doc) => {\r\n            let data = doc.data() as User;\r\n\r\n            users.push({\r\n                ...data, id: doc.id\r\n            });\r\n        })\r\n\r\n        localStorage.setItem('userList', JSON.stringify(users));\r\n\r\n        console.log(users);\r\n\r\n        users.map((user: User) => {\r\n            let el = `\r\n                    <li class=\"list-group-item\">\r\n                        <a href=\"../profile/profile.html?id=${user.id}\" class=\"d-flex align-items-center gap-2\">\r\n                            <img class=\"avatar\" style=\"width: 30px; height: 30px;\"\r\n                                src=${user.photoURL || 'https://www.w3schools.com/howto/img_avatar.png'} alt=\"user\">\r\n                            <p class=\"user-name\">${user.displayName?.split(' ').slice(0, 2).join(' ') || user.email.split('@')[0]}</p>\r\n                        </a>\r\n                </li>\r\n                 `;\r\n            allAccounts!.innerHTML += el;\r\n        }\r\n        )\r\n    })\r\n}\r\n\r\nuserInfoContainer.addEventListener('click', (e) => {\r\n    let users = localStorage.getItem('userList');\r\n    let userList = JSON.parse(users ?? '[]');\r\n    let isMyId = userList.filter((user: ParcedUser) => user.email === parsedUser.email);\r\n\r\n    window.location.href = `../profile/profile.html?id=${isMyId[0].id}`;\r\n})\r\n\r\nsignOutBtn.addEventListener('click', () => {\r\n    signOut(auth).then(() => {\r\n        localStorage.removeItem('user');\r\n        window.location.href = '../../index.html';\r\n    }).catch((error) => {\r\n        console.log(error.message);\r\n    })\r\n})\r\n\r\nshowSuggestedAccounts()\r\nshowAllAccounts()\r\n\r\n\r\n"],"names":["$6AR8M","parcelRequire","$9641f399baa7b99c$var$db","$ilpIi","getFirestore","$9641f399baa7b99c$var$auth","getAuth","$9641f399baa7b99c$var$colRef","collection","$9641f399baa7b99c$var$modal","document","getElementById","$9641f399baa7b99c$var$avatar","querySelector","$9641f399baa7b99c$var$userName","$9641f399baa7b99c$var$signOutBtn","$9641f399baa7b99c$var$user","localStorage","getItem","$9641f399baa7b99c$var$accountList","$9641f399baa7b99c$var$parsedUser","JSON","parse","$9641f399baa7b99c$var$allAccounts","$9641f399baa7b99c$var$container","$9641f399baa7b99c$var$userInfoContainer","$9641f399baa7b99c$var$postId","$9641f399baa7b99c$var$usersRef","window","location","href","innerHTML","name","displayName","email","split","src","photoURL","addEventListener","titleModal","msg","closeBtn","users","isMyId","filter","user","value","addDoc","title","createdBy","length","id","love","isLoved","createdAt","Date","toISOString","click","$9641f399baa7b99c$var$addItem","onSnapshot","snapshot","posts","docs","forEach","doc","push","data","$9641f399baa7b99c$var$showPosts","querySelectorAll","loveBtn","idx","e","loveQuantity","isLovedBy","isMatched","some","lovedBy","uid","postRef","newIsLovedBy","updateDoc","console","log","sort","a","b","aDate","getTime","map","post","element","signOut","then","removeItem","catch","error","message","isSuggested","el","slice","join","setItem","stringify"],"version":3,"file":"home.9c43d25c.js.map"}